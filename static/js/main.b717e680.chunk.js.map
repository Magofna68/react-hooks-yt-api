{"version":3,"sources":["components/videoListItem.js","components/videoList.js","components/videoDetail.js","components/searchBar.js","App.js","index.js"],"names":["VideoListItem","props","video","onUserSelected","console","log","imageUrl","snippet","thumbnails","default","url","alt","title","onClick","className","src","VideoList","videoItems","videos","map","key","etag","onVideoSelect","Container","fluid","VideoDetail","videoId","id","Row","Col","allowfullscreen","frameborder","channelTitle","description","SearchBar","useState","term","setTerm","searchInput","React","useRef","useEffect","timer","setTimeout","current","focus","clearTimeout","ref","type","placeholder","label","defaultValue","onChange","e","onSearchTermChange","target","value","searchedTerm","newTerm","App","setVideos","selectedVideo","setSelectedVideo","fetchResource","item","a","YTSearch","process","data","styles","color","style","paddingTop","htmlFor","marginLeft","marginBottom","marginTop","paddingBottom","fontSize","position","md","xs","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b717e680.chunk.js","sourcesContent":["import React from 'react';\n\nconst VideoListItem = (props) => {\n  const video = props.video;\n  const onUserSelected = props.onUserSelected;\n  console.log(video);\n  const imageUrl = video.snippet.thumbnails.default.url;\n  const alt = video.snippet.thumbnails.title;\n  return (\n    // onClick gets passed to VideoList component as callback function\n    <li onClick={() => onUserSelected(video)} className='list-group-item'>\n      <div className='video-list-item media'>\n        <div className='item-left'>\n          <img className='media-object' src={imageUrl} alt={alt}></img>\n        </div>\n        <div className='item-right'>\n          <div className='media-heading'>{video.snippet.title}</div>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default VideoListItem;","import React from 'react';\nimport VideoListItem from './videoListItem';\nimport {Container, Col} from 'react-bootstrap/';\n\nconst VideoList = (props) => {\n  const videoItems = props.videos.map((video) => {\n    return (\n      <VideoListItem \n        key={video.etag} \n        video={video}\n        onUserSelected={props.onVideoSelect}\n      />\n    )\n  })\n  return (\n\n    <Container fluid=\"true\" className='video-list'>\n       <ul className='list-group'>\n          {videoItems}\n        </ul> \n    </Container>\n  )\n}\n\nexport default VideoList;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap/';\n\n\nconst VideoDetail = (props) => {\n  const video = props.video;\n\n  if (!video) {\n    return <div>Loading videos...</div>;\n  }\n  const videoId = video.id.videoId;\n  const url = `https://www.youtube.com/embed/${videoId}`;\n\n  return (\n\n    // <div className=\"video-detail col-md-8\">\n    //         <div className=\"embed-responsive embed-responsive-16by9\">\n    //             <iframe className=\"embed-responsive-item\" src={url}></iframe>\n    //         </div>\n    //         <div className=\"details\">\n    //             <div>{video.snippet.title}</div>\n    //             <div>{video.snippet.channelTitle}</div>\n    //             <div>{video.snippet.description}</div>\n    //         </div>\n    //     </div>\n\n    <Container fluid>\n      <Row>\n        <Col>\n          <div className=\"embed-responsive embed-responsive-16by9\">\n            <iframe  allowfullscreen frameborder=\"0\" title=\"videoPlayer\" className=\"embed-responsive-item\" src={url}></iframe>\n          </div>\n          <div className='videDetails'>\n            <br/>\n            <h3>{video.snippet.title}</h3>\n            <p><strong>{video.snippet.channelTitle}</strong></p>\n            <div className='video-description'>{video.snippet.description}</div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default VideoDetail;","import React, { useEffect, useState } from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst SearchBar = (props) => {\n  const [ term, setTerm ] = useState(\"\");\n  const searchInput = React.useRef(null);\n\n  // useEffect(()=> {\n  //   searchInput.current.focus();\n  // }, [term]);\n\n  useEffect(()=> {\n    const timer = setTimeout(() => \n      searchInput.current.focus(), 3000);\n      return () => clearTimeout(timer);\n  }, [term]);\n      \n    const handleChange = (e) => {\n      props.onSearchTermChange(e.target.value);\n      const searchedTerm = e.target.value\n      const newTerm = {...searchedTerm}\n      setTerm(newTerm);\n      console.log({term});  \n  }\n\n  return (\n      <div className='search-bar'>\n        <SearchIcon id=\"searchIcon\" />\n        <input \n            ref={searchInput}\n            type=\"text\"\n            placeholder='Search...'\n            label=\"Search...\"\n            defaultValue={term} \n            onChange={handleChange} \n        />\n        {/* <button\n          onChange={handleChange}\n          type=\"success\">\n          Search\n        </button> */}\n      </div>\n    );\n}\n\nexport default SearchBar;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport VideoList from './components/videoList';\nimport YTSearch from 'youtube-api-search';\nimport VideoDetail from './components/videoDetail';\nimport {Container, Row, Col } from 'react-bootstrap/';\nimport SearchBar from './components/searchBar';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst App = () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  useEffect(() => {\n    fetchResource(\"nothing, nowhere.\");\n  }, []);\n \n  const fetchResource = async (item) => {\n    await YTSearch({key: API_KEY, term: item}, (data) => {\n      setVideos(data);\n      setSelectedVideo(data[0])\n    });\n  }\n\n  \n  return (\n      <Container fluid>\n            <h2\n              styles={{color: \"#b0bbbf\",\n              }}><span id=\"title\">You</span>tube H<span className=\"whiteText\">oo</span>k<span className=\"apiHeader\">:</span> API <span>Pro</span><span className='apiHeader'>ject</span></h2>\n            <h5\n            style={{\n              color: \"gold\",\n              paddingTop: \"5px\"\n            }}>Brandon Magofna</h5>\n            <label \n              htmlFor=\"searchbar\"\n              style={{\n                marginLeft: \"13.5%\",\n                color: \"silver\",\n                marginBottom: \"-1%\",\n                marginTop: \"5%\",\n                paddingBottom: \"0px\",\n                fontSize: \"smaller\",\n                position: \"sticky\",\n              }}>\n              Search Youtube...\n            </label>\n            <SearchBar onSearchTermChange={term => fetchResource(term)} />\n            <Row className=\"justify-content-md-center\">\n              <Col md={8}>\n                <VideoDetail video={selectedVideo} />\n              </Col>\n              <Col xs={3}>\n              {/* <Col lg={true} md={true} xs={3}> */}\n                <VideoList \n                  onVideoSelect={selected => setSelectedVideo(selected)}\n                  videos={videos} \n                />\n              </Col>\n            </Row>\n      </Container>\n    )\n    \n  }\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}